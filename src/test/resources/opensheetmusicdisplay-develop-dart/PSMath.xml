<ProgramContext>
<SourceElementsContext>
<StatementContext>
<ClassDeclarationContext>
exportclass<IdentifierContext>
PSMath
</IdentifierContext>
<ClassHeritageContext>
null
</ClassHeritageContext>
<ClassTailContext>
{<ClassElementContext>
<MethodDeclarationExpressionContext>
<PropertyMemberBaseContext>
<AccessibilityModifierContext>
public
</AccessibilityModifierContext>
static
</PropertyMemberBaseContext>
<PropertyNameContext>
<IdentifierNameContext>
<IdentifierContext>
log
</IdentifierContext>

</IdentifierNameContext>

</PropertyNameContext>
<CallSignatureContext>
(<ParameterListContext>
<ParameterContext>
<RequiredParameterContext>
<IdentifierOrPatternContext>
<IdentifierNameContext>
<IdentifierContext>
base
</IdentifierContext>

</IdentifierNameContext>

</IdentifierOrPatternContext>
<TypeAnnotationContext>
:<Type_Context>
<PrimaryContext>
<PredefinedPrimTypeContext>
<PredefinedTypeContext>
number
</PredefinedTypeContext>

</PredefinedPrimTypeContext>

</PrimaryContext>

</Type_Context>

</TypeAnnotationContext>

</RequiredParameterContext>

</ParameterContext>
,<ParameterContext>
<RequiredParameterContext>
<IdentifierOrPatternContext>
<IdentifierNameContext>
<IdentifierContext>
x
</IdentifierContext>

</IdentifierNameContext>

</IdentifierOrPatternContext>
<TypeAnnotationContext>
:<Type_Context>
<PrimaryContext>
<PredefinedPrimTypeContext>
<PredefinedTypeContext>
number
</PredefinedTypeContext>

</PredefinedPrimTypeContext>

</PrimaryContext>

</Type_Context>

</TypeAnnotationContext>

</RequiredParameterContext>

</ParameterContext>

</ParameterListContext>
)<TypeAnnotationContext>
:<Type_Context>
<PrimaryContext>
<PredefinedPrimTypeContext>
<PredefinedTypeContext>
number
</PredefinedTypeContext>

</PredefinedPrimTypeContext>

</PrimaryContext>

</Type_Context>

</TypeAnnotationContext>

</CallSignatureContext>
{<FunctionBodyContext>
<SourceElementsContext>
<StatementContext>
<ExpressionStatementContext>
<ExpressionSequenceContext>
<IdentifierExpressionContext>
<IdentifierNameContext>
<ReservedWordContext>
<KeywordContext>
return
</KeywordContext>

</ReservedWordContext>

</IdentifierNameContext>
<MultiplicativeExpressionContext>
<ArgumentsExpressionContext>
<MemberDotExpressionContext>
<IdentifierExpressionContext>
<IdentifierNameContext>
<IdentifierContext>
Math
</IdentifierContext>

</IdentifierNameContext>

</IdentifierExpressionContext>
.<IdentifierNameContext>
<IdentifierContext>
log
</IdentifierContext>

</IdentifierNameContext>

</MemberDotExpressionContext>
<ArgumentsContext>
(<ArgumentListContext>
<ArgumentContext>
<IdentifierExpressionContext>
<IdentifierNameContext>
<IdentifierContext>
x
</IdentifierContext>

</IdentifierNameContext>

</IdentifierExpressionContext>

</ArgumentContext>

</ArgumentListContext>
)
</ArgumentsContext>

</ArgumentsExpressionContext>
/<ArgumentsExpressionContext>
<MemberDotExpressionContext>
<IdentifierExpressionContext>
<IdentifierNameContext>
<IdentifierContext>
Math
</IdentifierContext>

</IdentifierNameContext>

</IdentifierExpressionContext>
.<IdentifierNameContext>
<IdentifierContext>
log
</IdentifierContext>

</IdentifierNameContext>

</MemberDotExpressionContext>
<ArgumentsContext>
(<ArgumentListContext>
<ArgumentContext>
<IdentifierExpressionContext>
<IdentifierNameContext>
<IdentifierContext>
base
</IdentifierContext>

</IdentifierNameContext>

</IdentifierExpressionContext>

</ArgumentContext>

</ArgumentListContext>
)
</ArgumentsContext>

</ArgumentsExpressionContext>

</MultiplicativeExpressionContext>

</IdentifierExpressionContext>

</ExpressionSequenceContext>
;
</ExpressionStatementContext>

</StatementContext>

</SourceElementsContext>

</FunctionBodyContext>
}
</MethodDeclarationExpressionContext>

</ClassElementContext>
<ClassElementContext>
<MethodDeclarationExpressionContext>
<PropertyMemberBaseContext>
<AccessibilityModifierContext>
public
</AccessibilityModifierContext>
static
</PropertyMemberBaseContext>
<PropertyNameContext>
<IdentifierNameContext>
<IdentifierContext>
log10
</IdentifierContext>

</IdentifierNameContext>

</PropertyNameContext>
<CallSignatureContext>
(<ParameterListContext>
<ParameterContext>
<RequiredParameterContext>
<IdentifierOrPatternContext>
<IdentifierNameContext>
<IdentifierContext>
x
</IdentifierContext>

</IdentifierNameContext>

</IdentifierOrPatternContext>
<TypeAnnotationContext>
:<Type_Context>
<PrimaryContext>
<PredefinedPrimTypeContext>
<PredefinedTypeContext>
number
</PredefinedTypeContext>

</PredefinedPrimTypeContext>

</PrimaryContext>

</Type_Context>

</TypeAnnotationContext>

</RequiredParameterContext>

</ParameterContext>

</ParameterListContext>
)<TypeAnnotationContext>
:<Type_Context>
<PrimaryContext>
<PredefinedPrimTypeContext>
<PredefinedTypeContext>
number
</PredefinedTypeContext>

</PredefinedPrimTypeContext>

</PrimaryContext>

</Type_Context>

</TypeAnnotationContext>

</CallSignatureContext>
{<FunctionBodyContext>
<SourceElementsContext>
<StatementContext>
<ExpressionStatementContext>
<ExpressionSequenceContext>
<IdentifierExpressionContext>
<IdentifierNameContext>
<ReservedWordContext>
<KeywordContext>
return
</KeywordContext>

</ReservedWordContext>

</IdentifierNameContext>
<ArgumentsExpressionContext>
<MemberDotExpressionContext>
<IdentifierExpressionContext>
<IdentifierNameContext>
<IdentifierContext>
PSMath
</IdentifierContext>

</IdentifierNameContext>

</IdentifierExpressionContext>
.<IdentifierNameContext>
<IdentifierContext>
log
</IdentifierContext>

</IdentifierNameContext>

</MemberDotExpressionContext>
<ArgumentsContext>
(<ArgumentListContext>
<ArgumentContext>
<LiteralExpressionContext>
<LiteralContext>
<NumericLiteralContext>
10
</NumericLiteralContext>

</LiteralContext>

</LiteralExpressionContext>

</ArgumentContext>
,<ArgumentContext>
<IdentifierExpressionContext>
<IdentifierNameContext>
<IdentifierContext>
x
</IdentifierContext>

</IdentifierNameContext>

</IdentifierExpressionContext>

</ArgumentContext>

</ArgumentListContext>
)
</ArgumentsContext>

</ArgumentsExpressionContext>

</IdentifierExpressionContext>

</ExpressionSequenceContext>
;
</ExpressionStatementContext>

</StatementContext>

</SourceElementsContext>

</FunctionBodyContext>
}
</MethodDeclarationExpressionContext>

</ClassElementContext>
<ClassElementContext>
<MethodDeclarationExpressionContext>
<PropertyMemberBaseContext>
<AccessibilityModifierContext>
public
</AccessibilityModifierContext>
static
</PropertyMemberBaseContext>
<PropertyNameContext>
<IdentifierNameContext>
<IdentifierContext>
meanSimple
</IdentifierContext>

</IdentifierNameContext>

</PropertyNameContext>
<CallSignatureContext>
(<ParameterListContext>
<ParameterContext>
<RequiredParameterContext>
<IdentifierOrPatternContext>
<IdentifierNameContext>
<IdentifierContext>
values
</IdentifierContext>

</IdentifierNameContext>

</IdentifierOrPatternContext>
<TypeAnnotationContext>
:<Type_Context>
<PrimaryContext>
<ArrayPrimTypeContext>
<PredefinedPrimTypeContext>
<PredefinedTypeContext>
number
</PredefinedTypeContext>

</PredefinedPrimTypeContext>
[]
</ArrayPrimTypeContext>

</PrimaryContext>

</Type_Context>

</TypeAnnotationContext>

</RequiredParameterContext>

</ParameterContext>

</ParameterListContext>
)<TypeAnnotationContext>
:<Type_Context>
<PrimaryContext>
<PredefinedPrimTypeContext>
<PredefinedTypeContext>
number
</PredefinedTypeContext>

</PredefinedPrimTypeContext>

</PrimaryContext>

</Type_Context>

</TypeAnnotationContext>

</CallSignatureContext>
{<FunctionBodyContext>
<SourceElementsContext>
<StatementContext>
<VariableStatementContext>
<VarModifierContext>
let
</VarModifierContext>
<VariableDeclarationListContext>
<VariableDeclarationContext>
<IdentifierOrKeyWordContext>
<IdentifierContext>
sum
</IdentifierContext>

</IdentifierOrKeyWordContext>
<TypeAnnotationContext>
:<Type_Context>
<PrimaryContext>
<PredefinedPrimTypeContext>
<PredefinedTypeContext>
number
</PredefinedTypeContext>

</PredefinedPrimTypeContext>

</PrimaryContext>

</Type_Context>

</TypeAnnotationContext>
=<LiteralExpressionContext>
<LiteralContext>
<NumericLiteralContext>
0
</NumericLiteralContext>

</LiteralContext>

</LiteralExpressionContext>

</VariableDeclarationContext>

</VariableDeclarationListContext>
;
</VariableStatementContext>

</StatementContext>
<StatementContext>
<ForVarStatementContext>
for(<VarModifierContext>
let
</VarModifierContext>
<VariableDeclarationListContext>
<VariableDeclarationContext>
<IdentifierOrKeyWordContext>
<IdentifierContext>
i
</IdentifierContext>

</IdentifierOrKeyWordContext>
<TypeAnnotationContext>
:<Type_Context>
<PrimaryContext>
<PredefinedPrimTypeContext>
<PredefinedTypeContext>
number
</PredefinedTypeContext>

</PredefinedPrimTypeContext>

</PrimaryContext>

</Type_Context>

</TypeAnnotationContext>
=<LiteralExpressionContext>
<LiteralContext>
<NumericLiteralContext>
0
</NumericLiteralContext>

</LiteralContext>

</LiteralExpressionContext>

</VariableDeclarationContext>

</VariableDeclarationListContext>
;<ExpressionSequenceContext>
<RelationalExpressionContext>
<IdentifierExpressionContext>
<IdentifierNameContext>
<IdentifierContext>
i
</IdentifierContext>

</IdentifierNameContext>

</IdentifierExpressionContext>
<<MemberDotExpressionContext>
<IdentifierExpressionContext>
<IdentifierNameContext>
<IdentifierContext>
values
</IdentifierContext>

</IdentifierNameContext>

</IdentifierExpressionContext>
.<IdentifierNameContext>
<IdentifierContext>
length
</IdentifierContext>

</IdentifierNameContext>

</MemberDotExpressionContext>

</RelationalExpressionContext>

</ExpressionSequenceContext>
;<ExpressionSequenceContext>
<PostIncrementExpressionContext>
<IdentifierExpressionContext>
<IdentifierNameContext>
<IdentifierContext>
i
</IdentifierContext>

</IdentifierNameContext>

</IdentifierExpressionContext>
++
</PostIncrementExpressionContext>

</ExpressionSequenceContext>
)<StatementContext>
<BlockContext>
{<StatementListContext>
<StatementContext>
<ExpressionStatementContext>
<ExpressionSequenceContext>
<AssignmentOperatorExpressionContext>
<IdentifierExpressionContext>
<IdentifierNameContext>
<IdentifierContext>
sum
</IdentifierContext>

</IdentifierNameContext>

</IdentifierExpressionContext>
<AssignmentOperatorContext>
+=
</AssignmentOperatorContext>
<IdentifierExpressionContext>
<IdentifierNameContext>
<IdentifierContext>
values
</IdentifierContext>

</IdentifierNameContext>
<ArrayLiteralExpressionContext>
<ArrayLiteralContext>
[<ElementListContext>
<ArrayElementContext>
<IdentifierExpressionContext>
<IdentifierNameContext>
<IdentifierContext>
i
</IdentifierContext>

</IdentifierNameContext>

</IdentifierExpressionContext>

</ArrayElementContext>

</ElementListContext>
]
</ArrayLiteralContext>

</ArrayLiteralExpressionContext>

</IdentifierExpressionContext>

</AssignmentOperatorExpressionContext>

</ExpressionSequenceContext>
;
</ExpressionStatementContext>

</StatementContext>

</StatementListContext>
}
</BlockContext>

</StatementContext>

</ForVarStatementContext>

</StatementContext>
<StatementContext>
<ExpressionStatementContext>
<ExpressionSequenceContext>
<IdentifierExpressionContext>
<IdentifierNameContext>
<ReservedWordContext>
<KeywordContext>
return
</KeywordContext>

</ReservedWordContext>

</IdentifierNameContext>
<MultiplicativeExpressionContext>
<IdentifierExpressionContext>
<IdentifierNameContext>
<IdentifierContext>
sum
</IdentifierContext>

</IdentifierNameContext>

</IdentifierExpressionContext>
/<MemberDotExpressionContext>
<IdentifierExpressionContext>
<IdentifierNameContext>
<IdentifierContext>
values
</IdentifierContext>

</IdentifierNameContext>

</IdentifierExpressionContext>
.<IdentifierNameContext>
<IdentifierContext>
length
</IdentifierContext>

</IdentifierNameContext>

</MemberDotExpressionContext>

</MultiplicativeExpressionContext>

</IdentifierExpressionContext>

</ExpressionSequenceContext>
;
</ExpressionStatementContext>

</StatementContext>

</SourceElementsContext>

</FunctionBodyContext>
}
</MethodDeclarationExpressionContext>

</ClassElementContext>
<ClassElementContext>
<MethodDeclarationExpressionContext>
<PropertyMemberBaseContext>
<AccessibilityModifierContext>
public
</AccessibilityModifierContext>
static
</PropertyMemberBaseContext>
<PropertyNameContext>
<IdentifierNameContext>
<IdentifierContext>
meanWeighted
</IdentifierContext>

</IdentifierNameContext>

</PropertyNameContext>
<CallSignatureContext>
(<ParameterListContext>
<ParameterContext>
<RequiredParameterContext>
<IdentifierOrPatternContext>
<IdentifierNameContext>
<IdentifierContext>
values
</IdentifierContext>

</IdentifierNameContext>

</IdentifierOrPatternContext>
<TypeAnnotationContext>
:<Type_Context>
<PrimaryContext>
<ArrayPrimTypeContext>
<PredefinedPrimTypeContext>
<PredefinedTypeContext>
number
</PredefinedTypeContext>

</PredefinedPrimTypeContext>
[]
</ArrayPrimTypeContext>

</PrimaryContext>

</Type_Context>

</TypeAnnotationContext>

</RequiredParameterContext>

</ParameterContext>
,<ParameterContext>
<RequiredParameterContext>
<IdentifierOrPatternContext>
<IdentifierNameContext>
<IdentifierContext>
weights
</IdentifierContext>

</IdentifierNameContext>

</IdentifierOrPatternContext>
<TypeAnnotationContext>
:<Type_Context>
<PrimaryContext>
<ArrayPrimTypeContext>
<PredefinedPrimTypeContext>
<PredefinedTypeContext>
number
</PredefinedTypeContext>

</PredefinedPrimTypeContext>
[]
</ArrayPrimTypeContext>

</PrimaryContext>

</Type_Context>

</TypeAnnotationContext>

</RequiredParameterContext>

</ParameterContext>

</ParameterListContext>
)<TypeAnnotationContext>
:<Type_Context>
<PrimaryContext>
<PredefinedPrimTypeContext>
<PredefinedTypeContext>
number
</PredefinedTypeContext>

</PredefinedPrimTypeContext>

</PrimaryContext>

</Type_Context>

</TypeAnnotationContext>

</CallSignatureContext>
{<FunctionBodyContext>
<SourceElementsContext>
<StatementContext>
<ExpressionStatementContext>
<ExpressionSequenceContext>
<IdentifierExpressionContext>
<IdentifierNameContext>
<ReservedWordContext>
<KeywordContext>
if
</KeywordContext>

</ReservedWordContext>

</IdentifierNameContext>
<ParenthesizedExpressionContext>
(<ExpressionSequenceContext>
<LogicalOrExpressionContext>
<EqualityExpressionContext>
<MemberDotExpressionContext>
<IdentifierExpressionContext>
<IdentifierNameContext>
<IdentifierContext>
values
</IdentifierContext>

</IdentifierNameContext>

</IdentifierExpressionContext>
.<IdentifierNameContext>
<IdentifierContext>
length
</IdentifierContext>

</IdentifierNameContext>

</MemberDotExpressionContext>
!==<MemberDotExpressionContext>
<IdentifierExpressionContext>
<IdentifierNameContext>
<IdentifierContext>
weights
</IdentifierContext>

</IdentifierNameContext>

</IdentifierExpressionContext>
.<IdentifierNameContext>
<IdentifierContext>
length
</IdentifierContext>

</IdentifierNameContext>

</MemberDotExpressionContext>

</EqualityExpressionContext>
||<EqualityExpressionContext>
<MemberDotExpressionContext>
<IdentifierExpressionContext>
<IdentifierNameContext>
<IdentifierContext>
values
</IdentifierContext>

</IdentifierNameContext>

</IdentifierExpressionContext>
.<IdentifierNameContext>
<IdentifierContext>
length
</IdentifierContext>

</IdentifierNameContext>

</MemberDotExpressionContext>
===<LiteralExpressionContext>
<LiteralContext>
<NumericLiteralContext>
0
</NumericLiteralContext>

</LiteralContext>

</LiteralExpressionContext>

</EqualityExpressionContext>

</LogicalOrExpressionContext>

</ExpressionSequenceContext>
)
</ParenthesizedExpressionContext>

</IdentifierExpressionContext>

</ExpressionSequenceContext>

</ExpressionStatementContext>

</StatementContext>
<StatementContext>
<BlockContext>
{<StatementListContext>
<StatementContext>
<ExpressionStatementContext>
<ExpressionSequenceContext>
<IdentifierExpressionContext>
<IdentifierNameContext>
<ReservedWordContext>
<KeywordContext>
return
</KeywordContext>

</ReservedWordContext>

</IdentifierNameContext>
<LiteralExpressionContext>
<LiteralContext>
<NumericLiteralContext>
0
</NumericLiteralContext>

</LiteralContext>

</LiteralExpressionContext>

</IdentifierExpressionContext>

</ExpressionSequenceContext>
;
</ExpressionStatementContext>

</StatementContext>

</StatementListContext>
}
</BlockContext>

</StatementContext>
<StatementContext>
<VariableStatementContext>
<VarModifierContext>
let
</VarModifierContext>
<VariableDeclarationListContext>
<VariableDeclarationContext>
<IdentifierOrKeyWordContext>
<IdentifierContext>
sumWeigtedValues
</IdentifierContext>

</IdentifierOrKeyWordContext>
<TypeAnnotationContext>
:<Type_Context>
<PrimaryContext>
<PredefinedPrimTypeContext>
<PredefinedTypeContext>
number
</PredefinedTypeContext>

</PredefinedPrimTypeContext>

</PrimaryContext>

</Type_Context>

</TypeAnnotationContext>
=<LiteralExpressionContext>
<LiteralContext>
<NumericLiteralContext>
0
</NumericLiteralContext>

</LiteralContext>

</LiteralExpressionContext>

</VariableDeclarationContext>

</VariableDeclarationListContext>
;
</VariableStatementContext>

</StatementContext>
<StatementContext>
<VariableStatementContext>
<VarModifierContext>
let
</VarModifierContext>
<VariableDeclarationListContext>
<VariableDeclarationContext>
<IdentifierOrKeyWordContext>
<IdentifierContext>
sumWeights
</IdentifierContext>

</IdentifierOrKeyWordContext>
<TypeAnnotationContext>
:<Type_Context>
<PrimaryContext>
<PredefinedPrimTypeContext>
<PredefinedTypeContext>
number
</PredefinedTypeContext>

</PredefinedPrimTypeContext>

</PrimaryContext>

</Type_Context>

</TypeAnnotationContext>
=<LiteralExpressionContext>
<LiteralContext>
<NumericLiteralContext>
0
</NumericLiteralContext>

</LiteralContext>

</LiteralExpressionContext>

</VariableDeclarationContext>

</VariableDeclarationListContext>
;
</VariableStatementContext>

</StatementContext>
<StatementContext>
<ForVarStatementContext>
for(<VarModifierContext>
let
</VarModifierContext>
<VariableDeclarationListContext>
<VariableDeclarationContext>
<IdentifierOrKeyWordContext>
<IdentifierContext>
i
</IdentifierContext>

</IdentifierOrKeyWordContext>
<TypeAnnotationContext>
:<Type_Context>
<PrimaryContext>
<PredefinedPrimTypeContext>
<PredefinedTypeContext>
number
</PredefinedTypeContext>

</PredefinedPrimTypeContext>

</PrimaryContext>

</Type_Context>

</TypeAnnotationContext>
=<LiteralExpressionContext>
<LiteralContext>
<NumericLiteralContext>
0
</NumericLiteralContext>

</LiteralContext>

</LiteralExpressionContext>

</VariableDeclarationContext>

</VariableDeclarationListContext>
;<ExpressionSequenceContext>
<RelationalExpressionContext>
<IdentifierExpressionContext>
<IdentifierNameContext>
<IdentifierContext>
i
</IdentifierContext>

</IdentifierNameContext>

</IdentifierExpressionContext>
<<MemberDotExpressionContext>
<IdentifierExpressionContext>
<IdentifierNameContext>
<IdentifierContext>
values
</IdentifierContext>

</IdentifierNameContext>

</IdentifierExpressionContext>
.<IdentifierNameContext>
<IdentifierContext>
length
</IdentifierContext>

</IdentifierNameContext>

</MemberDotExpressionContext>

</RelationalExpressionContext>

</ExpressionSequenceContext>
;<ExpressionSequenceContext>
<PostIncrementExpressionContext>
<IdentifierExpressionContext>
<IdentifierNameContext>
<IdentifierContext>
i
</IdentifierContext>

</IdentifierNameContext>

</IdentifierExpressionContext>
++
</PostIncrementExpressionContext>

</ExpressionSequenceContext>
)<StatementContext>
<BlockContext>
{<StatementListContext>
<StatementContext>
<VariableStatementContext>
<VarModifierContext>
const
</VarModifierContext>
<VariableDeclarationListContext>
<VariableDeclarationContext>
<IdentifierOrKeyWordContext>
<IdentifierContext>
weight
</IdentifierContext>

</IdentifierOrKeyWordContext>
<TypeAnnotationContext>
:<Type_Context>
<PrimaryContext>
<PredefinedPrimTypeContext>
<PredefinedTypeContext>
number
</PredefinedTypeContext>

</PredefinedPrimTypeContext>

</PrimaryContext>

</Type_Context>

</TypeAnnotationContext>
=<IdentifierExpressionContext>
<IdentifierNameContext>
<IdentifierContext>
weights
</IdentifierContext>

</IdentifierNameContext>
<ArrayLiteralExpressionContext>
<ArrayLiteralContext>
[<ElementListContext>
<ArrayElementContext>
<IdentifierExpressionContext>
<IdentifierNameContext>
<IdentifierContext>
i
</IdentifierContext>

</IdentifierNameContext>

</IdentifierExpressionContext>

</ArrayElementContext>

</ElementListContext>
]
</ArrayLiteralContext>

</ArrayLiteralExpressionContext>

</IdentifierExpressionContext>

</VariableDeclarationContext>

</VariableDeclarationListContext>
;
</VariableStatementContext>

</StatementContext>
<StatementContext>
<ExpressionStatementContext>
<ExpressionSequenceContext>
<AssignmentOperatorExpressionContext>
<IdentifierExpressionContext>
<IdentifierNameContext>
<IdentifierContext>
sumWeigtedValues
</IdentifierContext>

</IdentifierNameContext>

</IdentifierExpressionContext>
<AssignmentOperatorContext>
+=
</AssignmentOperatorContext>
<IdentifierExpressionContext>
<IdentifierNameContext>
<IdentifierContext>
values
</IdentifierContext>

</IdentifierNameContext>
<MultiplicativeExpressionContext>
<ArrayLiteralExpressionContext>
<ArrayLiteralContext>
[<ElementListContext>
<ArrayElementContext>
<IdentifierExpressionContext>
<IdentifierNameContext>
<IdentifierContext>
i
</IdentifierContext>

</IdentifierNameContext>

</IdentifierExpressionContext>

</ArrayElementContext>

</ElementListContext>
]
</ArrayLiteralContext>

</ArrayLiteralExpressionContext>
*<IdentifierExpressionContext>
<IdentifierNameContext>
<IdentifierContext>
weight
</IdentifierContext>

</IdentifierNameContext>

</IdentifierExpressionContext>

</MultiplicativeExpressionContext>

</IdentifierExpressionContext>

</AssignmentOperatorExpressionContext>

</ExpressionSequenceContext>
;
</ExpressionStatementContext>

</StatementContext>
<StatementContext>
<ExpressionStatementContext>
<ExpressionSequenceContext>
<AssignmentOperatorExpressionContext>
<IdentifierExpressionContext>
<IdentifierNameContext>
<IdentifierContext>
sumWeights
</IdentifierContext>

</IdentifierNameContext>

</IdentifierExpressionContext>
<AssignmentOperatorContext>
+=
</AssignmentOperatorContext>
<IdentifierExpressionContext>
<IdentifierNameContext>
<IdentifierContext>
weight
</IdentifierContext>

</IdentifierNameContext>

</IdentifierExpressionContext>

</AssignmentOperatorExpressionContext>

</ExpressionSequenceContext>
;
</ExpressionStatementContext>

</StatementContext>

</StatementListContext>
}
</BlockContext>

</StatementContext>

</ForVarStatementContext>

</StatementContext>
<StatementContext>
<ExpressionStatementContext>
<ExpressionSequenceContext>
<IdentifierExpressionContext>
<IdentifierNameContext>
<ReservedWordContext>
<KeywordContext>
return
</KeywordContext>

</ReservedWordContext>

</IdentifierNameContext>
<MultiplicativeExpressionContext>
<IdentifierExpressionContext>
<IdentifierNameContext>
<IdentifierContext>
sumWeigtedValues
</IdentifierContext>

</IdentifierNameContext>

</IdentifierExpressionContext>
/<IdentifierExpressionContext>
<IdentifierNameContext>
<IdentifierContext>
sumWeights
</IdentifierContext>

</IdentifierNameContext>

</IdentifierExpressionContext>

</MultiplicativeExpressionContext>

</IdentifierExpressionContext>

</ExpressionSequenceContext>
;
</ExpressionStatementContext>

</StatementContext>

</SourceElementsContext>

</FunctionBodyContext>
}
</MethodDeclarationExpressionContext>

</ClassElementContext>
}
</ClassTailContext>

</ClassDeclarationContext>

</StatementContext>

</SourceElementsContext>
<EOF>
</ProgramContext>
